buildscript {
    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url 'https://kotlin.bintray.com/ktor' }
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:5.0.0"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

group 'YugiohAPI'
version '1.0.0'
mainClassName = "io.ktor.server.tomcat.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    main.resources.srcDirs = ['resources']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    test.resources.srcDirs = ['test-resources']
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'https://kotlin.bintray.com/ktor' }
}

dependencies {
    compile "io.ktor:ktor-server-servlet:$ktor_version"
    compile "io.ktor:ktor-server-tomcat:$ktor_version"
    compile "io.ktor:ktor-websockets:$ktor_version"
    compile "ch.qos.logback:logback-classic:$logback_version"
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-server-host-common:$ktor_version"
    compile "io.ktor:ktor-server-sessions:$ktor_version"
    compile "io.ktor:ktor-network-tls:$ktor_version"
    compile "io.ktor:ktor-locations:$ktor_version"
    compile "mysql:mysql-connector-java:8.0.15"
    compile "com.github.isyscore:common-ktor:1.6.0"
    compile 'org.xerial:sqlite-jdbc:3.34.0'

    // kanji to kana
    compile 'com.atilika.kuromoji:kuromoji-ipadic:0.9.0'
    compile 'com.mariten:kanatools:1.3.0'

    testCompile "io.ktor:ktor-server-tests:$ktor_version"
    testCompile "junit:junit:4.12"
}

distTar {
    into("${project.name}-${project.version}") {
        from '.'
        include 'lib*.*'
    }
}

distZip {
    into("${project.name}-${project.version}") {
        from '.'
        include 'lib*.*'
    }
}

shadowJar {
    archiveFileName = "${project.name}.jar"
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

tasks.withType(Jar) {
    destinationDir(file("$rootDir/jar"))
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

clean.doLast() {
    file("$rootDir/jar").deleteDir()
}
